:root {
  font-size: $base;
}

body,
#reactContainer {
  margin: 0;
  min-height: 100%;
  background: map-get($colors, primaryAlt);
  line-height: normal;
  font-size: $base;
  display: flex;
  flex-direction: column;
}

html,
body,
#reactContainer {
  height: 100%;
  font-family: map-get($typography, font);
  font-weight: 300;
  color: map-get($colors, primaryDarkActive);
}

#reactContainer {
  display: flex;
  flex-direction: column;
}

.istox-root {
  flex: 1 0 auto;
  padding-top: $headerHeight;
  min-height: 100vh;
}

.istox-wrapper {
  flex: 1 0 auto;
}

*:focus {
  outline: none !important;
}

.istox-footer-container {
  flex-shrink: 0;
}

html {
  height: 100%;
}

h1,
h2,
h3,
h4,
h5,
h6,
a,
p,
span,
label {
  color: map-get($colors, primaryDarkActive);
}

a:hover {
  color: map-get($colors, primary);
}

label {
  font-weight: 300;
  color: map-get($colors, primaryGreyDarker);
}

h1 {
  font-size: 3rem; // 48px
}
h2 {
  font-size: 2rem; // 32px
}
h3 {
  font-size: 1.786rem; // 25px
}
h4 {
  font-size: 1.5rem; // 21px
}
h5 {
  font-size: 1.2857142857142858rem; // 18px
}
h6 {
  font-size: 1.1428571428571428rem; // 16px
}
p,
article {
  font-size: 1rem;
  margin: 0;
  font-weight: 300;
}
.tiny {
  font-size: 0.7143rem; // 10px
}
.small {
  font-size: 0.857rem; // 12px
}
.medium {
  font-size: 1rem; // 14px
}
.large {
  font-size: 1.1428571428571428rem; // 16px
}

.color-primary {
  color: map-get($colors, primary);
}
.color-secondary {
  color: map-get($colors, secondary);
}
.color-disabled {
  color: map-get($colors, primaryGreyDark);
}
.color-light {
  color: map-get($colors, primaryGreyLight);
}
.color-dark {
  color: map-get($colors, primaryDarkActive);
}
.color-primary-grey-lighter {
  color: map-get($colors, primaryGreyLighter);
}
.color-primary-grey-light {
  color: map-get($colors, primaryGreyLight);
}
.color-primary-grey {
  color: map-get($colors, primaryGrey);
}
.color-primary-grey-dark {
  color: map-get($colors, primaryGreyDark);
}
.color-primary-grey-darker {
  color: map-get($colors, primaryGreyDarker);
}
.color-info {
  color: map-get($colors, info);
}
.color-success {
  color: map-get($colors, success);
}
.color-warning {
  color: map-get($colors, warning);
}
.color-danger {
  color: map-get($colors, danger);
}

.bg-primary {
  background-color: map-get($colors, primaryBackground);
}
.bg-secondary {
  background-color: map-get($colors, primarySecondaryBackground);
}
.bg-disabled {
  background-color: map-get($colors, primaryBackground);
  opacity: 0.7;
}
.bg-primary-grey-lighter {
  background-color: map-get($colors, primaryGreyLighter);
}
.bg-primary-grey-light {
  background-color: map-get($colors, primaryGreyLight);
}
.bg-primary-grey {
  background-color: map-get($colors, primaryGrey);
}
.bg-primary-grey-dark {
  background-color: map-get($colors, primaryGreyDark);
}
.bg-primary-grey-darker {
  background-color: map-get($colors, primaryGreyDarker);
}
.bg-info {
  background-color: map-get($colors, infoBackground);
}
.bg-success {
  background-color: map-get($colors, successBackground);
}
.bg-warning {
  background-color: map-get($colors, warningBackground);
}
.bg-danger {
  background-color: map-get($colors, dangerBackground);
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-weight: 600;
  color: inherit;
  margin: 0.3rem 0;
}

hr {
  margin-top: 1rem;
  margin-bottom: 1rem;
  display: inline-block;
  border: 0;

  &.hidden {
    visibility: none;
  }
}

.header {
  position: fixed;
  min-width: 100%;
  left: 0;
  top: 0;
  z-index: 10;
}

.inline-block {
  display: inline-block;
}

.display-flex {
  display: flex;
}

.display-grid {
  display: grid;
}

.normal-text {
  font-weight: 300;
}

.light-bold {
  font-weight: 500;
}

.semi-bold {
  font-weight: 600;
}

.bold,
b,
strong {
  font-weight: 700;
}

.extra-bold {
  font-weight: 800;
}

.italic {
  font-style: italic;
}

.vertical-align-sub {
  vertical-align: sub;
}

.vertical-align-middle {
  vertical-align: middle;
}

.text-left {
  text-align: left;
}

.text-center {
  text-align: center !important;
}

.text-right {
  text-align: right;
}

.text-justify {
  text-align: justify;
}

.none {
  float: none !important;
  margin: auto !important;
}

.right {
  float: right !important;
  margin-left: auto !important;
}

.left {
  float: left !important;
  margin-right: auto !important;
}

.flex-1 {
  flex: 1;
}

.flex-auto {
  flex: auto;
}

.flex-50 {
  flex: 50%;
}

.width-50 {
  width: 50%;
}

.overflow-hidden {
  overflow: hidden;
}

.overflow-auto {
  overflow: auto;
}

.pagination {
  border-radius: 0;
  > li:first-child > a,
  > li:last-child > a {
    border-radius: 0;
  }
}

.cursor-default {
  cursor: default !important;
}

.cursor-pointer {
  cursor: pointer;
}

.uppercase {
  text-transform: uppercase;
}

.rotate {
  animation: rotate 0.8s linear infinite;
  transform-box: fill-box;
  transform-origin: center;
  -ms-transform-origin: center;
  -webkit-transform-origin: center;
}

::selection {
  color: #fff;
  color: hsla(0, 0%, 100%, 0.9);
  background: map-get($colors, secondary);
}

:global(.ant-popover-inner) {
  box-shadow: rgba(0, 0, 0, 0.15) 0px 4px 0px;
  border: 1px solid rgba(125, 125, 125, 0.1);
  border-radius: 0;
  background-clip: unset;
}

:global(.ant-modal-mask) {
  background-color: rgba(28, 66, 103, 0.5);
}

@keyframes rotate {
  from {
    transform: rotate(0deg);
    -ms-transform: rotate(0deg);
    -webkit-transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
    -ms-transform: rotate(360deg);
    -webkit-transform: rotate(360deg);
  }
}

@mixin mq($mq-breakpoint, $mq-breakpoints: $breakpoints) {
  $mq-media-query: 'screen and';

  @if $mq-breakpoint == landscape or $mq-breakpoint == portrait {
    $mq-media-query: '#{$mq-media-query} (orientation: #{$mq-breakpoint})';
  } @else if $mq-breakpoint == retina {
    $mq-media-query: '#{$mq-media-query} (-webkit-min-device-pixel-ratio: 2),'+'#{$mq-media-query} (min-resolution: 2dppx)';
  } @else {
    @if map-has-key($mq-breakpoints, $mq-breakpoint) {
      $mq-breakpoint: map-get($mq-breakpoints, $mq-breakpoint);
    }
    $mq-media-query: '#{$mq-media-query} (max-width: #{$mq-breakpoint}px)';
  }

  @media #{$mq-media-query} {
    @content;
  }
}

@include mq(retina) {
}

@include mq(huge) {
}

@include mq(big) {
}

@include mq(large) {
}

@include mq(medium) {
  .display-flex {
    display: grid;
  }
}

@include mq(small) {
}

@include mq(tiny) {
}

@include mq(mini) {
}
